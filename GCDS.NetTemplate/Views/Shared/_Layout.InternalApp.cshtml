@using GCDS.NetTemplate.Templates
@using GCDS.NetTemplate.Templates.Custom
@using GCDS.NetTemplate.Utils

@{
	InternalAppTemplate? template = ViewData.GetTemplate<InternalAppTemplate>();
	ArgumentNullException.ThrowIfNull(template, "Must call Add[Mvc]TemplateServices in Program,cs, and verify the InternalAppTemplate is loaded to the ViewData to use this layout.");
}

<!DOCTYPE html>
<html lang="@template.Lang">
<head>
	<meta charset="utf-8" />
	<meta name="viewport"
		  content="width=device-width, initial-scale=1.0" />

	<title>@template.PageTitle</title>

	@await Html.PartialAsync("GCDS.NetTemplate/ExtHeadSettings", template.Settings)

	@Html.Raw(template.HeadElements.Render())
	@await RenderSectionAsync("Head", required: false)
</head>
<body>
	@{
		ArgumentNullException.ThrowIfNull(template.Header, "Header must be set when using this template.");
		template.Header.AppHeaderTop.LanguageToggle.Href = template.LanguageToggleHref;
	}
	@await Html.PartialAsync("GCDS.NetTemplate/ExtAppHeader", template.Header)

	<gcds-container size="xl"
					centered
					main-container>
		<main id="@Constants.SKIP_TO_CONTENT_ID"
			  role="main">
			@RenderBody()
		</main>

		@await Html.PartialAsync("GCDS.NetTemplate/GcdsDateModified", template.DateModified)
	</gcds-container>

	@await Html.PartialAsync("GCDS.NetTemplate/GcdsFooter", template.Footer)

	@await RenderSectionAsync("Scripts", required: false)
</body>
</html>
