@using GCDS.NetTemplate.Components
@using GCDS.NetTemplate.Templates
@using GCDS.NetTemplate.Core
@using Microsoft.AspNetCore.Html

@{
	Splash? template = ViewData.GetTemplate<Splash>();
	ArgumentNullException.ThrowIfNull(template, "Must call Add[Mvc]TemplateServices in Program,cs, and verify the SplashTemplate is loaded to the ViewData to use this layout.");
}

<!DOCTYPE html>
<html lang="@template.Lang">
<head>
	<meta charset="utf-8" />
	<meta name="viewport"
		  content="width=device-width, initial-scale=1.0" />

	<title>@template.PageTitle</title>

	@await Html.PartialAsync("ExtHeadSettings.cshtml", template.Settings)

	@Html.Raw(template.HeadElements.Render())
	@await RenderSectionAsync("Head", required: false)

	<style>
		#splash-window-top {
			padding: 1rem 2.5rem 3rem;
			background-color: var(--gcds-bg-light);
		}

		#splash-window-bttm {
			padding: 2rem;
			background-color: var(--gcds-disabled-background);
		}

		#bttm-links {
			list-style-type: none;
		}

			#bttm-links li {
				display: inline-block;
				font: var(--gcds-font-text-small);
			}

				#bttm-links li::before {
					content: "•";
					display: inline;
					margin: var(--gcds-footer-sub-listitem-before-margin);
				}

				#bttm-links li:first-of-type::before {
					content: "";
					margin: 0;
				}

			#bttm-links a, #bttm-links a:visited {
				color: var(--gcds-link-default);
				text-decoration: none;
			}

				#bttm-links a:hover, #bttm-links a:active {
					color: var(--gcds-link-hover);
					text-decoration: underline;
				}

		h1 {
			height: 0;
			width: 0;
			overflow: hidden;
			clip: rect(0,0,0,0);
		}

		h2 {
			font: var(--gcds-font-h6);
		}
	</style>
</head>

<body>

	@await Html.PartialAsync("ExtRandomBackground.cshtml", template.SplashImages)

	<main>
		<gcds-container size="sm" margin="1000" centered main-container>
			<div id="splash-window-top">
				<h1>@template.PageTitle</h1>
				@await Html.PartialAsync("GcdsSignature.cshtml", template.TopSignature)

				@{
					ArgumentNullException.ThrowIfNull(template.LanguageSelector, "LanguageSelector must be set when using this template.");
				}
				@await Html.PartialAsync("ExtLanguageSelector.cshtml", template.LanguageSelector)
			</div>
			<div id="splash-window-bttm">
				<gcds-grid columns="3fr 2fr">
					<ul id="bttm-links">
						@{
							var enTerms = new HtmlString($@"<li><a href='{template.TermsEn.Href}' lang='en'>{template.TermsEn.Text}</a></li>");
							var frTerms = new HtmlString($@"<li><a href='{template.TermsFr.Href}' lang='fr'>{template.TermsFr.Text}</a></li>");
						}
mmonCo
						@if (template.Lang == CommonConstants.ENGLISH_CULTURE_TWO_LETTER)
						{
							@enTerms
							@frTerms
						}
						else
						{
							@frTerms
							@enTerms
						}
					</ul>
					@await Html.PartialAsync("GcdsSignature.cshtml", template.BottomSignature)
			</div>
		</gcds-container>
		@RenderBody()
	</main>
	
	@await RenderSectionAsync("Scripts", required: false)
</body>

</html>
